/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/images/{fname}': {
    /** @description get image by id */
    get: {
      parameters: {
        path: {
          /** @description image file id */
          fname: string
        }
      }
      responses: {
        /** @description image binarydata */
        200: {
          content: {
            'image/webp': string
          }
        }
        /** @description unauthorized */
        401: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** @description not found */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** @description internal server error */
        500: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/images/upload/{listID}': {
    /** @description upload images */
    post: {
      parameters: {
        path: {
          /** @description list id for uploaded files */
          listID: string
        }
      }
      requestBody?: {
        content: {
          'multipart/form-data': {
            /** @description images to upload */
            images?: string[]
          }
        }
      }
      responses: {
        /** @description images successfully uploaded */
        201: {
          content: {
            'application/json': string[]
          }
        }
        /** @description bad request */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** @description ubauthorized */
        401: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** @description internal server error */
        500: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    ErrorResponse: {
      /** @description error message */
      error: string
      fields?: {
        [key: string]: string
      }
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type external = Record<string, never>

export type operations = Record<string, never>
