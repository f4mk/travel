// Package list provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.4 DO NOT EDIT.
package list

import (
	"time"
)

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	// Error error message
	Error  string             `json:"error"`
	Fields *map[string]string `json:"fields,omitempty"`
}

// ItemResponse defines model for ItemResponse.
type ItemResponse struct {
	// Address item address on map
	Address *string `json:"address,omitempty"`

	// DateCreated creation date
	DateCreated time.Time `json:"date_created"`

	// DateUpdated date of last update
	DateUpdated time.Time `json:"date_updated"`

	// Description item description
	Description *string `json:"description,omitempty"`

	// Id item id
	ID string `json:"id"`

	// ImageLinks array of attached image links
	ImageLinks *[]string `json:"image_links,omitempty"`

	// Links array of attached links
	Links *[]LinkResponse `json:"links,omitempty"`

	// ListId item parent id
	ListID string `json:"list_id"`

	// Name item name
	Name string `json:"name"`

	// Point item location on map
	Point PointResponse `json:"point"`

	// Visited location is visited
	Visited bool `json:"visited"`
}

// LinkResponse link object
type LinkResponse struct {
	// Id link id
	ID string `json:"id"`

	// ItemId link parent id
	ItemID string `json:"item_id"`

	// Name link display name
	Name *string `json:"name,omitempty"`

	// Url url
	URL string `json:"url"`
}

// ListResponse defines model for ListResponse.
type ListResponse struct {
	// Completed is list completed
	Completed bool `json:"completed"`

	// DateCreated date of creation
	DateCreated time.Time `json:"date_created"`

	// DateUpdated date of last update
	DateUpdated *time.Time `json:"date_updated,omitempty"`

	// Description list description
	Description *string `json:"description,omitempty"`

	// Favorite is list favorite
	Favorite bool `json:"favorite"`

	// Id list id
	ID string `json:"id"`

	// ItemsId array of items ids
	ItemsID *[]string `json:"items_id,omitempty"`

	// Name list name
	Name string `json:"name"`

	// Private is list private
	Private bool `json:"private"`

	// UserId list owner id
	UserID string `json:"user_id"`
}

// NewItem new item object
type NewItem struct {
	// Address new item address
	Address *string `json:"address,omitempty" validate:"omitempty"`

	// Description new item description
	Description *string `json:"description,omitempty" validate:"omitempty,gte=1"`

	// ImageLinks new item's image links array
	ImageLinks *[]string `json:"image_links,omitempty" validate:"omitempty"`

	// Links new item's links array
	Links *[]NewLink `json:"links,omitempty" validate:"omitempty"`

	// Name new item name
	Name string `json:"name" validate:"required,gte=1"`

	// Point new point object
	Point NewPoint `json:"point"`
}

// NewLink new link object
type NewLink struct {
	// Name new link name
	Name *string `json:"name,omitempty" validate:"omitempty,gte=1"`

	// Url new link url
	URL string `json:"url" validate:"required,startswith=http"`
}

// NewList new list object
type NewList struct {
	// Description new list description
	Description *string `json:"description,omitempty" validate:"omitempty,gte=1"`

	// Name new list name
	Name string `json:"name" validate:"required,gte=1"`

	// Private is new list private
	Private *bool `json:"private,omitempty" validate:"omitempty,boolean"`
}

// NewPoint new point object
type NewPoint struct {
	// Lat new point's latitude
	Lat float64 `json:"lat" validate:"required,number"`

	// Lng new point's latitude
	Lng float64 `json:"lng" validate:"required,number"`
}

// PointResponse item location on map
type PointResponse struct {
	// Id location id
	ID string `json:"id"`

	// ItemId location parent id
	ItemID string `json:"item_id"`

	// Lat latitude of location on map
	Lat float64 `json:"lat"`

	// Lng longitude of location on map
	Lng float64 `json:"lng"`
}

// UpdateItem update item object
type UpdateItem struct {
	// Address updated item address
	Address *string `json:"address,omitempty" validate:"omitempty,gte=1"`

	// Description updated item description
	Description *string `json:"description,omitempty" validate:"omitempty,gte=1"`

	// ImageLinks updated item's image links array
	ImageLinks *[]string `json:"image_links,omitempty" validate:"omitempty"`

	// Links updated item's links array
	Links *[]UpdateLink `json:"links,omitempty" validate:"omitempty"`

	// Name updated item name
	Name *string `json:"name,omitempty" validate:"omitempty,gte=1"`

	// Point new point object
	Point *UpdatePoint `json:"point,omitempty"`

	// Visited updated item visited mark
	Visited *bool `json:"visited,omitempty" validate:"omitempty,boolean"`
}

// UpdateLink new link object
type UpdateLink struct {
	// Id updated link id
	ID string `json:"id" validate:"required"`

	// Name new link name
	Name *string `json:"name,omitempty" validate:"omitempty,gte=1"`

	// Url new link url
	URL *string `json:"url,omitempty" validate:"omitempty,startswith=http"`
}

// UpdateList update list object
type UpdateList struct {
	// Completed updated list completeness setting
	Completed *bool `json:"completed,omitempty" validate:"omitempty,boolean"`

	// Description updated list description
	Description *string `json:"description,omitempty" validate:"omitempty,gte=1"`

	// Favorite updated list favorite setting
	Favorite *bool `json:"favorite,omitempty" validate:"omitempty,boolean"`

	// ItemsId array of list's items
	ItemsID *[]string `json:"items_id,omitempty" validate:"omitempty"`

	// Name updated list name
	Name *string `json:"name,omitempty" validate:"omitempty,gte=1"`

	// Private updated list privacy setting
	Private *bool `json:"private,omitempty" validate:"omitempty,boolean"`
}

// UpdatePoint new point object
type UpdatePoint struct {
	// Id updated point id
	ID string `json:"id" validate:"required"`

	// Lat new point's latitude
	Lat float64 `json:"lat" validate:"required,number"`

	// Lng new point's latitude
	Lng float64 `json:"lng" validate:"required,number"`
}

// DeleteListsListIdJSONBody defines parameters for DeleteListsListId.
type DeleteListsListIdJSONBody = map[string]interface{}

// DeleteListsListIdItemsItemIdJSONBody defines parameters for DeleteListsListIdItemsItemId.
type DeleteListsListIdItemsItemIdJSONBody = map[string]interface{}

// PostListsJSONRequestBody defines body for PostLists for application/json ContentType.
type PostListsJSONRequestBody = NewList

// DeleteListsListIdJSONRequestBody defines body for DeleteListsListId for application/json ContentType.
type DeleteListsListIdJSONRequestBody = DeleteListsListIdJSONBody

// PutListsListIdJSONRequestBody defines body for PutListsListId for application/json ContentType.
type PutListsListIdJSONRequestBody = UpdateList

// PostListsListIdItemsJSONRequestBody defines body for PostListsListIdItems for application/json ContentType.
type PostListsListIdItemsJSONRequestBody = NewItem

// DeleteListsListIdItemsItemIdJSONRequestBody defines body for DeleteListsListIdItemsItemId for application/json ContentType.
type DeleteListsListIdItemsItemIdJSONRequestBody = DeleteListsListIdItemsItemIdJSONBody

// PutListsListIdItemsItemIdJSONRequestBody defines body for PutListsListIdItemsItemId for application/json ContentType.
type PutListsListIdItemsItemIdJSONRequestBody = UpdateItem
