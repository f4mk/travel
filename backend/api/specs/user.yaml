openapi: "3.0.0"
info:
  version: 1.0.0
  title: API
paths:
  /user:
    get:
      tags: ["user","get-all"]
      responses:
        '200':
          description: returns all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags: ["user","post","create"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '200':
          description: user created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags: ["user","put","update"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: user created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/{id}:
    get:
      tags: ["user","get"]
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the user
          schema:
            type: string
      responses:
        '200':
          description: returns the user with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  schemas:
    NewUser:
      type: object
      properties:
        name:
          type: string
          description: "user name"
          x-oapi-codegen-extra-tags:
            validate: "required,gte=2"
        email:
          type: string
          description: "user email"
          x-oapi-codegen-extra-tags:
            validate: "required,email"
        password:
          type: string
          description: "user password"
          x-oapi-codegen-extra-tags:
            validate: "required,gte=6"
        password_confirm:
          type: string
          description: "user password confirm"
          x-oapi-codegen-extra-tags:
            validate: "eqfield=Password"
      required:
        - name
        - email
        - password
        - password_confirm

    UpdateUser:
      type: object
      properties:
        name:
          type: string
          description: "user name"
          x-oapi-codegen-extra-tags:
            validate: "omitempty,gte=2"
        email:
          type: string
          description: "user email"
          x-oapi-codegen-extra-tags:
            validate: "omitempty,email"
        password:
          type: string
          description: "user password"
          x-oapi-codegen-extra-tags:
            validate: "required"
      required:
        - password

    UserResponse:
      type: object
      properties:
        id:
          type: string
          description: user unique id
          x-go-name: ID
        name:
          type: string
          description: user's name
        email:
          type: string
          description: user's email
        date_created:    
          type: string
          description: date created
          x-go-type: time.Time
      required:
        - id
        - name
        - email
        - date_created
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: error message
        fields:
          type: object
          additionalProperties:
            type: string
      required:
        - error

